[{"D:\\quantity-messurement\\src\\index.js":"1","D:\\quantity-messurement\\src\\App.js":"2","D:\\quantity-messurement\\src\\reportWebVitals.js":"3","D:\\quantity-messurement\\src\\Components\\HelloWorldProject\\QuantityMeasurement.jsx":"4","D:\\quantity-messurement\\src\\Pages\\Home\\Home.jsx":"5","D:\\quantity-messurement\\src\\Components\\LengthComp\\LengthComponent.jsx":"6","D:\\quantity-messurement\\src\\Components\\TemperatureCompo\\TempComponent.jsx":"7","D:\\quantity-messurement\\src\\Components\\VolumeCompo\\VolumeComponent.jsx":"8","D:\\quantity-messurement\\src\\Services\\Volume.js":"9","D:\\quantity-messurement\\src\\Services\\LengthConv.js":"10"},{"size":504,"mtime":1611342069278,"results":"11","hashOfConfig":"12"},{"size":907,"mtime":1611296328228,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":295,"mtime":1611036761469,"results":"15","hashOfConfig":"12"},{"size":4710,"mtime":1611296702489,"results":"16","hashOfConfig":"12"},{"size":5816,"mtime":1611342528780,"results":"17","hashOfConfig":"12"},{"size":4327,"mtime":1611299294074,"results":"18","hashOfConfig":"12"},{"size":4819,"mtime":1611310743931,"results":"19","hashOfConfig":"12"},{"size":82,"mtime":1611299704709,"results":"20","hashOfConfig":"12"},{"size":993,"mtime":1611342848491,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3emf7i",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\quantity-messurement\\src\\index.js",[],"D:\\quantity-messurement\\src\\App.js",[],["48","49"],"D:\\quantity-messurement\\src\\reportWebVitals.js",[],"D:\\quantity-messurement\\src\\Components\\HelloWorldProject\\QuantityMeasurement.jsx",[],["50","51"],"D:\\quantity-messurement\\src\\Pages\\Home\\Home.jsx",["52"],"import React, { Component } from 'react';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {AppBar, Card, TextField} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport './Home.css';\r\nimport LengthImg from '../../Assets/length.png';\r\nimport TempImg from '../../Assets/Temperature.png';\r\nimport VolumeImg from '../../Assets/Volume.png';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass Home extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {Length: ''}\r\n    }\r\n    handleChange=(event)=>{\r\n        let Length = event.target.value;\r\n        this.setState({Length: event.target.value})\r\n    }\r\n   \r\n    handleLength=()=>{\r\n        this.props.history.push(\"/Length\");\r\n    }\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/Temperature\");\r\n    }\r\n    handleVolume=()=>{\r\n        this.props.history.push(\"/Volume\");\r\n    }\r\n       \r\n        render() {\r\n            return (\r\n                <div className = 'homeContainer'>\r\n                    <AppBar id = \"appBar\">\r\n                    <h2>Welcome To Quantity Measurement</h2>                        \r\n                    </AppBar>\r\n                    <div>\r\n                        <div class=\"text\"><label>CHOOSE TYPE</label></div>\r\n                    </div>\r\n                    <div className='center'>\r\n                        <Card className=\"cardContainer\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={LengthImg} alt=\"Length\"/>\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleTemp}>\r\n                            <div>\r\n                                <img src={TempImg} alt=\"Temp\"/>\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={VolumeImg} alt=\"Vol\"/>\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div >\r\n                \r\n                <div className=\"converter\">\r\n                <div>\r\n                <div id=\"fromText\"><label>FROM</label></div>\r\n                <div id=\"fromContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" onChange={this.handleChange}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={20}>Kilometre</MenuItem>\r\n                        <MenuItem value={20}>Metres</MenuItem>\r\n                        <MenuItem value={10}>Micrometre</MenuItem>\r\n                        <MenuItem value={40}>Mile</MenuItem>\r\n                        <MenuItem value={10}>Centimetres</MenuItem>\r\n                        <MenuItem value={30}>Milimetre</MenuItem>\r\n                        <MenuItem value={50}>Foot</MenuItem>\r\n                        <MenuItem value={60}>Inch</MenuItem>\r\n                </Select> \r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"ToText\">\r\n                <label id=\"select-label\">TO</label>\r\n                <div id=\"toContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                <Select className=\"selectID\"  onChange={this.handleChange}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={20}>Centimeters </MenuItem>\r\n                        <MenuItem value={20}>Kilometres </MenuItem>\r\n                        <MenuItem value={10}>Milimetre </MenuItem>\r\n                        <MenuItem value={30}>Micrometre </MenuItem>\r\n                        <MenuItem value={20}>Mile </MenuItem>\r\n                        <MenuItem value={10}>Foot </MenuItem>\r\n                        <MenuItem value={30}>Inch </MenuItem>\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                </div> \r\n                <div className=\"height\"></div>                        \r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\nexport default withRouter(Home);","D:\\quantity-messurement\\src\\Components\\LengthComp\\LengthComponent.jsx",["53","54","55","56"],"import React, { Component } from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {AppBar, Card, TextField} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport LengthConvertor from '../../Services/LengthConv';\r\nimport './Length.css';\r\nimport LengthImg from '../../Assets/length.png';\r\nimport TempImg from '../../Assets/Temperature.png';\r\nimport VolumeImg from '../../Assets/Volume.png';\r\n\r\n\r\nlet lengthObj = new LengthConvertor();\r\nvar output = 0;\r\n\r\nclass LengthComponent extends Component {\r\n    constructor (){\r\n        super();\r\n        this.state = {\r\n            Length: '',\r\n            setLengthFrom: '',\r\n            setLengthTo: '',\r\n            setLengthFromText:''\r\n        }\r\n    }\r\n     \r\n    handleChangeLenFrom=(event)=>{\r\n        this.setState({\r\n            setLengthFrom: event.target.value\r\n        })\r\n        this.state.setLengthFrom = event.target.value;\r\n        this.output = lengthObj.calculateLength(this.state.setLengthFromText,this.state.setLengthFrom,this.state.setLengthTo);\r\n    };\r\n\r\n    handleChangeLenTo=(event)=>{\r\n        this.setState({\r\n            setLengthTo: event.target.value\r\n        })\r\n        this.state.setLengthTo = event.target.value;\r\n        this.output = lengthObj.calculateLength(this.state.setLengthFromText,this.state.setLengthFrom,this.state.setLengthTo);\r\n    };\r\n    \r\n    GetTextByChange=(event)=>{\r\n        this.setState({\r\n            setLengthFromText: event.target.value\r\n        })\r\n        this.state.setLengthFromText = event.target.value;\r\n        this.output = lengthObj.calculateLength(this.state.setLengthFromText,this.state.setLengthFrom,this.state.setLengthTo);\r\n    };\r\n\r\n    handleLength=()=>{\r\n        this.props.history.push(\"/Length\");\r\n    }\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/Temperature\");\r\n    }\r\n    handleVolume=()=>{\r\n        this.props.history.push(\"/Volume\");\r\n    }\r\n       \r\n        render() {\r\n            return (\r\n                <div className = 'homeContainer'>\r\n                    <AppBar id = \"appBar\">\r\n                    <h2>Welcome To Quantity Measurement</h2>                        \r\n                    </AppBar>\r\n                    <div>\r\n                        <div class=\"text\"><label>CHOOSE TYPE</label></div>\r\n                    </div>\r\n                    <div className='center'>\r\n                    <Card className=\"cardContainer\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={LengthImg} alt=\"Length\"/>\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleTemp} >\r\n                            <div>\r\n                                <img src={TempImg} alt=\"Temp\"/>\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={VolumeImg} alt=\"Vol\"/>\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div >\r\n                \r\n                <div className=\"converter\">\r\n                <div>\r\n                <div id=\"fromText\"><label>FROM</label></div>\r\n                <div id=\"fromContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" variant=\"outlined\" size=\"small\" onChange={this.GetTextByChange} ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" value={this.state.setLengthFrom}  onChange={this.handleChangeLenFrom}>\r\n                            <MenuItem value={39370}>Kilometer</MenuItem>\r\n                            <MenuItem value={39}>Meter</MenuItem>\r\n                            <MenuItem value={0.393701}>Centimeter</MenuItem>\r\n                            <MenuItem value={0.393701}>Millimeter</MenuItem>\r\n                            <MenuItem value={0.0000393701}>Micrometer</MenuItem>\r\n                            <MenuItem value={63360}>Mile</MenuItem>\r\n                            <MenuItem value={12}>Foot</MenuItem>\r\n                            <MenuItem value={1}>Inch</MenuItem>\r\n                </Select> \r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"ToText\">\r\n                <label id=\"select-label\">TO</label>\r\n                <div id=\"toContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" variant=\"outlined\" size=\"small\" value={this.output} ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.setLengthTo} onChange={this.handleChangeLenTo}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={1}>Centimeters </MenuItem>\r\n                        <MenuItem value={2}>Kilometres </MenuItem>\r\n                        <MenuItem value={3}>Milimetre </MenuItem>\r\n                        <MenuItem value={4}>Micrometre </MenuItem>\r\n                        <MenuItem value={5}>Mile </MenuItem>\r\n                        <MenuItem value={6}>Foot </MenuItem>\r\n                        <MenuItem value={7}>Inch </MenuItem>\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                </div> \r\n                <div className=\"height\"></div>                        \r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\nexport default LengthComponent;","D:\\quantity-messurement\\src\\Components\\TemperatureCompo\\TempComponent.jsx",["57"],"import React, { Component } from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {AppBar, Card, TextField} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport './Temperature.css';\r\nimport LengthImg from '../../Assets/length.png';\r\nimport TempImg from '../../Assets/Temperature.png';\r\nimport VolumeImg from '../../Assets/Volume.png';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass TempComponent extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {temperature: ''}\r\n    }\r\n     \r\n    handleChange=(event)=>{\r\n        let temperature = event.target.value;\r\n        this.setState({temperature: event.target.value})\r\n    }\r\n    handleLength=()=>{\r\n        this.props.history.push(\"/Length\");\r\n    }\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/Temperature\");\r\n    }\r\n    handleVolume=()=>{\r\n        this.props.history.push(\"/Volume\");\r\n    }\r\n       \r\n        render() {\r\n            console.log(this.props);\r\n            return (\r\n                <div className = 'homeContainer'>\r\n                    <AppBar id = \"appBar\">\r\n                    <h2>Welcome To Quantity Measurement</h2>                        \r\n                    </AppBar>\r\n                    <div>\r\n                        <div class=\"text\"><label>CHOOSE TYPE</label></div>\r\n                    </div>\r\n                    <div className='center'>\r\n                        <Card className=\"cardContainer\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={LengthImg} alt=\"Length\"/>\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleTemp} >\r\n                            <div>\r\n                                <img src={TempImg} alt=\"Temp\"/>\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={VolumeImg} alt=\"Vol\"/>\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div >\r\n                \r\n                <div className=\"converter\">\r\n                <div>\r\n                <div id=\"fromText\"><label>FROM</label></div>\r\n                <div id=\"fromContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" value={this.state.temperature} onChange={this.handleChange}>\r\n                        <MenuItem value={20}>Celsius </MenuItem>\r\n                        <MenuItem value={20}>Fahrenheit </MenuItem>\r\n                        <MenuItem value={10}>Rankine </MenuItem>\r\n                        <MenuItem value={30}>Kelvin </MenuItem>\r\n                </Select> \r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"ToText\">\r\n                <label id=\"select-label\">TO</label>\r\n                <div id=\"toContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.temperature} onChange={this.handleChange}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={20}>Celsius </MenuItem>\r\n                        <MenuItem value={20}>Fahrenheit </MenuItem>\r\n                        <MenuItem value={10}>Rankine </MenuItem>\r\n                        <MenuItem value={30}>Kelvin </MenuItem>\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                </div> \r\n                <div className=\"height\"></div>                        \r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\nexport default withRouter(TempComponent);\r\n","D:\\quantity-messurement\\src\\Components\\VolumeCompo\\VolumeComponent.jsx",["58","59"],"import React, { Component } from 'react';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {AppBar, Card, TextField} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport './Volume.css';\r\nimport LengthImg from '../../Assets/length.png';\r\nimport TempImg from '../../Assets/Temperature.png';\r\nimport VolumeImg from '../../Assets/Volume.png';\r\nimport Volume from '../../Services/Volume.js';\r\n\r\n\r\nlet objvol = new Volume();\r\nclass VolumeComponent extends Component {\r\n    constructor (){\r\n        super();\r\n        this.state = {volume: ''}\r\n    }\r\n     \r\n    handleChangeVol=(event)=>{\r\n        let vol = event.target.value;\r\n        this.setState({vol: event.target.value})\r\n    }\r\n    handleLength=()=>{\r\n        this.props.history.push(\"/Length\");\r\n    }\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/Temperature\");\r\n    }\r\n    handleVolume=()=>{\r\n        this.props.history.push(\"/Volume\");\r\n    }\r\n        \r\n        render() {\r\n            return (\r\n                <div className = 'homeContainer'>\r\n                    <AppBar id = \"appBar\">\r\n                    <h2>Welcome To Quantity Measurement</h2>                        \r\n                    </AppBar>\r\n                    <div>\r\n                        <div class=\"text\"><label>CHOOSE TYPE</label></div>\r\n                    </div>\r\n                    <div className='center'>\r\n                    <Card className=\"cardContainer\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={LengthImg} alt=\"Length\"/>\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleTemp} >\r\n                            <div>\r\n                                <img src={TempImg} alt=\"Temp\"/>\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={VolumeImg} alt=\"Vol\"/>\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div >\r\n                \r\n                <div className=\"converter\">\r\n                <div>\r\n                <div id=\"fromText\"><label>FROM</label></div>\r\n                <div id=\"fromContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" placeholder=\"input\" id=\"input\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.vol} onChange={this.handleChangeVol}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={20}>cubic meter </MenuItem>\r\n                        <MenuItem value={20}>barrel </MenuItem>\r\n                        <MenuItem value={10}>cubic foot </MenuItem>\r\n                        <MenuItem value={30}>cubic decimeter </MenuItem>\r\n                        <MenuItem value={30}>liter </MenuItem>\r\n                        <MenuItem value={30}>cubic inch </MenuItem>\r\n                        <MenuItem value={30}>cubic centimeter </MenuItem>\r\n\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"ToText\">\r\n                <label id=\"select-label\">TO</label>\r\n                <div id=\"toContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" placeholder=\"result\" id=\"result\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.vol} onChange={this.handleChangeVol}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={20}>cubic meter </MenuItem>\r\n                        <MenuItem value={20}>barrel </MenuItem>\r\n                        <MenuItem value={10}>cubic foot </MenuItem>\r\n                        <MenuItem value={30}>cubic decimeter </MenuItem>\r\n                        <MenuItem value={30}>liter </MenuItem>\r\n                        <MenuItem value={30}>cubic inch </MenuItem>\r\n                        <MenuItem value={30}>cubic centimeter </MenuItem>\r\n\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                </div> \r\n                <div className=\"height\"></div>                        \r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\nexport default VolumeComponent;","D:\\quantity-messurement\\src\\Services\\Volume.js",[],"D:\\quantity-messurement\\src\\Services\\LengthConv.js",["60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":19,"column":13,"nodeType":"69","messageId":"70","endLine":19,"endColumn":19},{"ruleId":"67","severity":1,"message":"71","line":13,"column":5,"nodeType":"69","messageId":"70","endLine":13,"endColumn":11},{"ruleId":"72","severity":1,"message":"73","line":30,"column":9,"nodeType":"74","endLine":30,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":38,"column":9,"nodeType":"74","endLine":38,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":46,"column":9,"nodeType":"74","endLine":46,"endColumn":19},{"ruleId":"67","severity":1,"message":"75","line":19,"column":13,"nodeType":"69","messageId":"70","endLine":19,"endColumn":24},{"ruleId":"67","severity":1,"message":"76","line":13,"column":5,"nodeType":"69","messageId":"70","endLine":13,"endColumn":11},{"ruleId":"67","severity":1,"message":"77","line":21,"column":13,"nodeType":"69","messageId":"70","endLine":21,"endColumn":16},{"ruleId":"67","severity":1,"message":"78","line":7,"column":13,"nodeType":"69","messageId":"70","endLine":7,"endColumn":17},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"no-unused-vars","'Length' is assigned a value but never used.","Identifier","unusedVar","'output' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'temperature' is assigned a value but never used.","'objvol' is assigned a value but never used.","'vol' is assigned a value but never used.","'inch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]