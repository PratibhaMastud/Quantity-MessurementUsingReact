[{"D:\\quantity-messurement\\src\\index.js":"1","D:\\quantity-messurement\\src\\App.js":"2","D:\\quantity-messurement\\src\\reportWebVitals.js":"3","D:\\quantity-messurement\\src\\Components\\HelloWorldProject\\QuantityMeasurement.jsx":"4","D:\\quantity-messurement\\src\\Pages\\Home\\Home.jsx":"5","D:\\quantity-messurement\\src\\Components\\LengthComp\\LengthComponent.jsx":"6","D:\\quantity-messurement\\src\\Components\\TemperatureCompo\\TempComponent.jsx":"7","D:\\quantity-messurement\\src\\Components\\VolumeCompo\\VolumeComponent.jsx":"8","D:\\quantity-messurement\\src\\Services\\Volume.js":"9","D:\\quantity-messurement\\src\\Services\\LengthConv.js":"10","D:\\quantity-messurement\\src\\Services\\Temperature.js":"11","D:\\quantity-messurement\\src\\Components\\demo.jsx":"12"},{"size":504,"mtime":1611342069278,"results":"13","hashOfConfig":"14"},{"size":962,"mtime":1611405288368,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":295,"mtime":1611036761469,"results":"17","hashOfConfig":"14"},{"size":4710,"mtime":1611296702489,"results":"18","hashOfConfig":"14"},{"size":5816,"mtime":1611342528780,"results":"19","hashOfConfig":"14"},{"size":5184,"mtime":1611345239046,"results":"20","hashOfConfig":"14"},{"size":5057,"mtime":1611562980207,"results":"21","hashOfConfig":"14"},{"size":614,"mtime":1611406868975,"results":"22","hashOfConfig":"14"},{"size":993,"mtime":1611342848491,"results":"23","hashOfConfig":"14"},{"size":654,"mtime":1611345302820,"results":"24","hashOfConfig":"14"},{"size":587,"mtime":1611552251062,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3emf7i",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"D:\\quantity-messurement\\src\\index.js",[],["59","60"],"D:\\quantity-messurement\\src\\App.js",[],"D:\\quantity-messurement\\src\\reportWebVitals.js",[],"D:\\quantity-messurement\\src\\Components\\HelloWorldProject\\QuantityMeasurement.jsx",[],["61","62"],"D:\\quantity-messurement\\src\\Pages\\Home\\Home.jsx",["63"],"import React, { Component } from 'react';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {AppBar, Card, TextField} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport './Home.css';\r\nimport LengthImg from '../../Assets/length.png';\r\nimport TempImg from '../../Assets/Temperature.png';\r\nimport VolumeImg from '../../Assets/Volume.png';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass Home extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {Length: ''}\r\n    }\r\n    handleChange=(event)=>{\r\n        let Length = event.target.value;\r\n        this.setState({Length: event.target.value})\r\n    }\r\n   \r\n    handleLength=()=>{\r\n        this.props.history.push(\"/Length\");\r\n    }\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/Temperature\");\r\n    }\r\n    handleVolume=()=>{\r\n        this.props.history.push(\"/Volume\");\r\n    }\r\n       \r\n        render() {\r\n            return (\r\n                <div className = 'homeContainer'>\r\n                    <AppBar id = \"appBar\">\r\n                    <h2>Welcome To Quantity Measurement</h2>                        \r\n                    </AppBar>\r\n                    <div>\r\n                        <div class=\"text\"><label>CHOOSE TYPE</label></div>\r\n                    </div>\r\n                    <div className='center'>\r\n                        <Card className=\"cardContainer\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={LengthImg} alt=\"Length\"/>\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleTemp}>\r\n                            <div>\r\n                                <img src={TempImg} alt=\"Temp\"/>\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={VolumeImg} alt=\"Vol\"/>\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div >\r\n                \r\n                <div className=\"converter\">\r\n                <div>\r\n                <div id=\"fromText\"><label>FROM</label></div>\r\n                <div id=\"fromContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" onChange={this.handleChange}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={20}>Kilometre</MenuItem>\r\n                        <MenuItem value={20}>Metres</MenuItem>\r\n                        <MenuItem value={10}>Micrometre</MenuItem>\r\n                        <MenuItem value={40}>Mile</MenuItem>\r\n                        <MenuItem value={10}>Centimetres</MenuItem>\r\n                        <MenuItem value={30}>Milimetre</MenuItem>\r\n                        <MenuItem value={50}>Foot</MenuItem>\r\n                        <MenuItem value={60}>Inch</MenuItem>\r\n                </Select> \r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"ToText\">\r\n                <label id=\"select-label\">TO</label>\r\n                <div id=\"toContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                <Select className=\"selectID\"  onChange={this.handleChange}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={20}>Centimeters </MenuItem>\r\n                        <MenuItem value={20}>Kilometres </MenuItem>\r\n                        <MenuItem value={10}>Milimetre </MenuItem>\r\n                        <MenuItem value={30}>Micrometre </MenuItem>\r\n                        <MenuItem value={20}>Mile </MenuItem>\r\n                        <MenuItem value={10}>Foot </MenuItem>\r\n                        <MenuItem value={30}>Inch </MenuItem>\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                </div> \r\n                <div className=\"height\"></div>                        \r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\nexport default withRouter(Home);","D:\\quantity-messurement\\src\\Components\\LengthComp\\LengthComponent.jsx",["64","65","66","67"],"import React, { Component } from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {AppBar, Card, TextField} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport LengthConvertor from '../../Services/LengthConv';\r\nimport './Length.css';\r\nimport LengthImg from '../../Assets/length.png';\r\nimport TempImg from '../../Assets/Temperature.png';\r\nimport VolumeImg from '../../Assets/Volume.png';\r\n\r\n\r\nlet lengthObj = new LengthConvertor();\r\nvar output = 0;\r\n\r\nclass LengthComponent extends Component {\r\n    constructor (){\r\n        super();\r\n        this.state = {\r\n            Length: '',\r\n            setLengthFrom: '',\r\n            setLengthTo: '',\r\n            setLengthFromText:''\r\n        }\r\n    }\r\n     \r\n    handleChangeLenFrom=(event)=>{\r\n        this.setState({\r\n            setLengthFrom: event.target.value\r\n        })\r\n        this.state.setLengthFrom = event.target.value;\r\n        this.output = lengthObj.calculateLength(this.state.setLengthFromText,this.state.setLengthFrom,this.state.setLengthTo);\r\n    };\r\n\r\n    handleChangeLenTo=(event)=>{\r\n        this.setState({\r\n            setLengthTo: event.target.value\r\n        })\r\n        this.state.setLengthTo = event.target.value;\r\n        this.output = lengthObj.calculateLength(this.state.setLengthFromText,this.state.setLengthFrom,this.state.setLengthTo);\r\n    };\r\n    \r\n    GetTextByChange=(event)=>{\r\n        this.setState({\r\n            setLengthFromText: event.target.value\r\n        })\r\n        this.state.setLengthFromText = event.target.value;\r\n        this.output = lengthObj.calculateLength(this.state.setLengthFromText,this.state.setLengthFrom,this.state.setLengthTo);\r\n    };\r\n\r\n    handleLength=()=>{\r\n        this.props.history.push(\"/Length\");\r\n    }\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/Temperature\");\r\n    }\r\n    handleVolume=()=>{\r\n        this.props.history.push(\"/Volume\");\r\n    }\r\n       \r\n        render() {\r\n            return (\r\n                <div className = 'homeContainer'>\r\n                    <AppBar id = \"appBar\">\r\n                    <h2>Welcome To Quantity Measurement</h2>                        \r\n                    </AppBar>\r\n                    <div>\r\n                        <div class=\"text\"><label>CHOOSE TYPE</label></div>\r\n                    </div>\r\n                    <div className='center'>\r\n                    <Card className=\"cardContainer\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={LengthImg} alt=\"Length\"/>\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleTemp} >\r\n                            <div>\r\n                                <img src={TempImg} alt=\"Temp\"/>\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={VolumeImg} alt=\"Vol\"/>\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div >\r\n                \r\n                <div className=\"converter\">\r\n                <div>\r\n                <div id=\"fromText\"><label>FROM</label></div>\r\n                <div id=\"fromContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" variant=\"outlined\" size=\"small\" onChange={this.GetTextByChange} ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" value={this.state.setLengthFrom}  onChange={this.handleChangeLenFrom}>\r\n                            <MenuItem value={39370}>Kilometer</MenuItem>\r\n                            <MenuItem value={39}>Meter</MenuItem>\r\n                            <MenuItem value={0.393701}>Centimeter</MenuItem>\r\n                            <MenuItem value={0.393701}>Millimeter</MenuItem>\r\n                            <MenuItem value={0.0000393701}>Micrometer</MenuItem>\r\n                            <MenuItem value={63360}>Mile</MenuItem>\r\n                            <MenuItem value={12}>Foot</MenuItem>\r\n                            <MenuItem value={1}>Inch</MenuItem>\r\n                </Select> \r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"ToText\">\r\n                <label id=\"select-label\">TO</label>\r\n                <div id=\"toContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" variant=\"outlined\" size=\"small\" value={this.output} ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.setLengthTo} onChange={this.handleChangeLenTo}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={1}>Centimeters </MenuItem>\r\n                        <MenuItem value={2}>Kilometres </MenuItem>\r\n                        <MenuItem value={3}>Milimetre </MenuItem>\r\n                        <MenuItem value={4}>Micrometre </MenuItem>\r\n                        <MenuItem value={5}>Mile </MenuItem>\r\n                        <MenuItem value={6}>Foot </MenuItem>\r\n                        <MenuItem value={7}>Inch </MenuItem>\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                </div> \r\n                <div className=\"height\"></div>                        \r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\nexport default LengthComponent;","D:\\quantity-messurement\\src\\Components\\TemperatureCompo\\TempComponent.jsx",["68","69","70","71"],"import React, { Component } from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {AppBar, Card, TextField} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport './Temperature.css';\r\nimport LengthImg from '../../Assets/length.png';\r\nimport TempImg from '../../Assets/Temperature.png';\r\nimport VolumeImg from '../../Assets/Volume.png';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Temp from '../../Services/Temperature';\r\n\r\nlet objTemp = new Temp();\r\nvar output = 0;\r\nclass TempComponent extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            temperature: '',\r\n            setTempFrom: '',\r\n            setTempTo: '',\r\n            setTempFromText:''\r\n        }     \r\n    }\r\n  \r\n    handleChangeTempFrom=(event)=>{\r\n        this.setState({\r\n            setTempFrom: event.target.value\r\n        })\r\n        this.state.setTempFrom = event.target.value;\r\n        this.output = objTemp.CalculateTemp(this.state.setTempFromText,this.state.setTempFrom,this.state.setTempTo);\r\n    };\r\n\r\n    handleChangeTempTo=(event)=>{\r\n        this.setState({\r\n            setTempTo: event.target.value\r\n        })\r\n        this.state.setTempTo = event.target.value;\r\n        this.output = objTemp.CalculateTemp(this.state.setTempFromText,this.state.setTempFrom,this.state.setTempTo);\r\n    };\r\n    \r\n    GetTextByChange=(event)=>{\r\n        this.setState({\r\n            setTempFromText: event.target.value\r\n        })\r\n        this.state.setTempFromText = event.target.value;\r\n        this.output = objTemp.CalculateTemp(this.state.setTempFromText,this.state.setTempFrom,this.state.setTempTo);\r\n    };\r\n    \r\n    handleLength=()=>{\r\n        this.props.history.push(\"/Length\");\r\n    }\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/Temperature\");\r\n    }\r\n    handleVolume=()=>{\r\n        this.props.history.push(\"/Volume\");\r\n    }\r\n       \r\n        render() {\r\n            console.log(this.props);\r\n            return (\r\n                <div className = 'homeContainer'>\r\n                    <AppBar id = \"appBar\">\r\n                    <h2>Welcome To Quantity Measurement</h2>                        \r\n                    </AppBar>\r\n                    <div>\r\n                        <div class=\"text\"><label>CHOOSE TYPE</label></div>\r\n                    </div>\r\n                    <div className='center'>\r\n                        <Card className=\"cardContainer\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={LengthImg} alt=\"Length\"/>\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleTemp} >\r\n                            <div>\r\n                                <img src={TempImg} alt=\"Temp\"/>\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"cardContainer\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={VolumeImg} alt=\"Vol\"/>\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div >\r\n                \r\n                <div className=\"converter\">\r\n                <div>\r\n                <div id=\"fromText\"><label>FROM</label></div>\r\n                <div id=\"fromContainer\">\r\n                <div><TextField className=\"TextField\" type=\"text\" variant=\"outlined\" size=\"small\" onChange={this.GetTextByChange} ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" value={this.state.setTempFrom} onChange={this.handleChangeTempFrom}>\r\n                            <MenuItem value={1}>Celsius</MenuItem>\r\n                            <MenuItem value={33.8}>Fahrenheit</MenuItem>\r\n                            <MenuItem value={273.15}>kelvin</MenuItem>\r\n                </Select> \r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"ToText\">\r\n                <label id=\"select-label\">TO</label>\r\n                <div id=\"toContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" value={this.output} ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.setTempTo} onChange={this.handleChangeTempTo}>\r\n                            <MenuItem value={1}>Celsius</MenuItem>\r\n                            <MenuItem value={2}>Fahrenheit</MenuItem>\r\n                            <MenuItem value={3}>kelvin</MenuItem>\r\n                </Select>\r\n                </div>\r\n                </div>\r\n                </div> \r\n                <div className=\"height\"></div>                        \r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\nexport default withRouter(TempComponent);\r\n","D:\\quantity-messurement\\src\\Components\\VolumeCompo\\VolumeComponent.jsx",["72","73","74","75"],"D:\\quantity-messurement\\src\\Services\\Volume.js",["76"],"class Volume {\r\n    Calculate(value, from, to) {\r\n        if (value == null || from == null || to == null) {\r\n            return null;\r\n        }\r\n        var liter =0;\r\n        switch (to) {\r\n            case 1:\r\n                this.liter = value;\r\n                return this.liter;\r\n            case 2:\r\n                this.liter = value * from;\r\n                return this.liter * 1000\r\n            case 3:\r\n                this.liter = value * from;\r\n                return this.liter / 3.785;\r\n            default:\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    export default Volume;","D:\\quantity-messurement\\src\\Services\\LengthConv.js",["77"],"class LengthConv {\r\n\r\n    calculateLength(value, from, to) {\r\n        if (value == null || from == null || to == null) {\r\n            return null;\r\n        }\r\n        var inch =0;\r\n        switch (to) {\r\n            case 1:\r\n                this.inch = value * from;\r\n                return this.inch;\r\n\r\n            case 2:\r\n                this.inch = value * from;\r\n                return this.inch;\r\n            case 3:\r\n                this.inch = value * from;\r\n                return this.inch;\r\n            case 4:\r\n                this.inch = value * from;\r\n                return this.inch;\r\n            case 5:\r\n                this.inch= value * from;\r\n                return this.inch;\r\n            case 6:\r\n               this.inch = value * from;\r\n                return this.inch;\r\n            case 7:\r\n                this.inch = value * from;\r\n                return this.inch;\r\n            default:\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default LengthConv; ","D:\\quantity-messurement\\src\\Services\\Temperature.js",["78"],"class Temperature {\r\n    CalculateTemp(value, from, to) {\r\n        if (value == null || from == null || to == null) {\r\n            return null;\r\n        }\r\n        var celsius =0;\r\n        switch (to) {\r\n            case 1:\r\n                this.celsius = value;\r\n                return this.celsius;\r\n            case 2:\r\n                this.celsius = value * from;\r\n                return ((this.celsius * 9/5) + 32);\r\n            case 3:\r\n                this.celsius = value * from;\r\n                return (this.celsius + 273.15);\r\n            default:\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    export default Temperature;","D:\\quantity-messurement\\src\\Components\\demo.jsx",["79"],"import React from 'react';\r\n\r\nclass demo extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n    this.state = {\r\n        firstname: ''\r\n    };\r\n    }\r\n    onInputChange(event){\r\n        this.setState({\r\n            firstname:event.target.value\r\n        });\r\n        this.state.firstname = event.targget.value;\r\n    }\r\n\r\n    render(){\r\n        \r\n        return( \r\n            <div>\r\n                <input name=\"name\" type=\"text\" value={this.state.firstname} onChange={this.onInputChange}/>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\nexport default demo;",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":19,"column":13,"nodeType":"88","messageId":"89","endLine":19,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":13,"column":5,"nodeType":"88","messageId":"89","endLine":13,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":30,"column":9,"nodeType":"93","endLine":30,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":38,"column":9,"nodeType":"93","endLine":38,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":46,"column":9,"nodeType":"93","endLine":46,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":13,"column":5,"nodeType":"88","messageId":"89","endLine":13,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":29,"column":9,"nodeType":"93","endLine":29,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":37,"column":9,"nodeType":"93","endLine":37,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":45,"column":9,"nodeType":"93","endLine":45,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":15,"column":5,"nodeType":"88","messageId":"89","endLine":15,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":31,"column":9,"nodeType":"93","endLine":31,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":39,"column":9,"nodeType":"93","endLine":39,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":47,"column":9,"nodeType":"93","endLine":47,"endColumn":19},{"ruleId":"86","severity":1,"message":"94","line":6,"column":13,"nodeType":"88","messageId":"89","endLine":6,"endColumn":18},{"ruleId":"86","severity":1,"message":"95","line":7,"column":13,"nodeType":"88","messageId":"89","endLine":7,"endColumn":17},{"ruleId":"86","severity":1,"message":"96","line":6,"column":13,"nodeType":"88","messageId":"89","endLine":6,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":15,"column":9,"nodeType":"93","endLine":15,"endColumn":19},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"no-unused-vars","'Length' is assigned a value but never used.","Identifier","unusedVar","'output' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'liter' is assigned a value but never used.","'inch' is assigned a value but never used.","'celsius' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]